package com.example.accessingdatamysql.controller;

import com.example.accessingdatamysql.model.Teacher;
import com.example.accessingdatamysql.repository.TeacherRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/teacher") // This means URL's start with /demo (after Application path)
public class TeacherController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private TeacherRepository teacherRepository;


  @PostMapping(path="/teacher/addTeacher") // Map ONLY POST Requests
  public @ResponseBody String addNewTeacher (@RequestParam String name
      , @RequestParam String email) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Teacher n = new com.example.accessingdatamysql.model.Teacher();
    n.setName(name);
    n.setEmail(email);
    teacherRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Teacher> getAllTeachers() {
    // This returns a JSON or XML with the users
    return teacherRepository.findAll();
  }
}
